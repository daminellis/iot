NUMERO DO MARCOS, 33084278

EXERCICIO 1 FUNCOES

int batatinha = 0;

void setup() {
  Serial.begin(9600);
}

void loop() {
  int a = 4;
  int b = 5;
  int c = multiplica(a, b);
  Serial.println(c);
}
int multiplica(int x, int y) {
  int z = 0;
  for (int i = 0; i < y; i++) {
    z += x;
  }
========================================
const int pin_led = 13;
const int pin_interrupt = 2;
int estado = LOW;

void setup() {
  pinMode(pin_led, OUTPUT);
  pinMode(pin_interrupt, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(pin_interrupt),pisca, FALLING);
}

void loop() {
  diitalWrite(pin_led, estado);
}

void pisca() {
  estado = !estado;
}
=====================================
const int buttonPin = 2;        // Pino do botão
const int heatingElementPin = 3; // Pino do elemento de aquecimento
const int temperatureSensorPin = A0; // Pino do sensor de temperatura
const int coffeeMakerPin = 4;     // Pino do bloco faz café
const int cupSensorPin = 5;        // Pino do sensor de copo
const int buzzerPin = 6;           // Pino do buzzer

const int temperatureThreshold = 100; // Temperatura desejada para o café (em graus Celsius)

bool coffeeReady = false;

void setup() {
  pinMode(buttonPin, INPUT_PULLUP);
  pinMode(heatingElementPin, OUTPUT);
  pinMode(coffeeMakerPin, OUTPUT);
  pinMode(cupSensorPin, INPUT);
  pinMode(buzzerPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  int temperature = analogRead(temperatureSensorPin); // Leitura da temperatura do sensor
  int buttonState = digitalRead(buttonPin); // Leitura do estado do botão
  int cupDetected = digitalRead(cupSensorPin); // Leitura do sensor de copo

  if (buttonState == LOW) {
    Serial.println("Botão pressionado. Preparando café...");

    // Aquecer a água até a temperatura desejada
    while (temperature < temperatureThreshold) {
      digitalWrite(heatingElementPin, HIGH);
      temperature = analogRead(temperatureSensorPin);
      delay(1000);
    }

    // Desligar o aquecimento
    digitalWrite(heatingElementPin, LOW);

    // Verificar se há um copo
    if (cupDetected == HIGH) {
      // Fazer o café
      digitalWrite(coffeeMakerPin, HIGH);
      delay(2000); // Tempo para fazer o café (ajuste conforme necessário)
      digitalWrite(coffeeMakerPin, LOW);

      // Sinal sonoro
      digitalWrite(buzzerPin, HIGH);
      delay(1000);
      digitalWrite(buzzerPin, LOW);

      coffeeReady = true;
    } else {
      Serial.println("Nenhum copo detectado. Café não foi feito.");
    }
  }

  if (coffeeReady) {
    Serial.println("Por favor, retire o copo.");
    coffeeReady = false;
  }
}

